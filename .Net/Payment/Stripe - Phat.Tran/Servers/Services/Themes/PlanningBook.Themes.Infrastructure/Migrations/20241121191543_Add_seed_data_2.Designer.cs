// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlanningBook.Themes.Infrastructure;

#nullable disable

namespace PlanningBook.Themes.Infrastructure.Migrations
{
    [DbContext(typeof(PBThemeDbContext))]
    [Migration("20241121191543_Add_seed_data_2")]
    partial class Add_seed_data_2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlanningBook.Themes.Infrastructure.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProductType")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("PlanningBook.Themes.Infrastructure.Entities.OrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EntityRelatedId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PriceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ProductType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PriceId");

                    b.ToTable("OrderDetails", (string)null);
                });

            modelBuilder.Entity("PlanningBook.Themes.Infrastructure.Entities.Price", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Prices", (string)null);
                });

            modelBuilder.Entity("PlanningBook.Themes.Infrastructure.Entities.ProductPrice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PriceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ProductPrices", (string)null);
                });

            modelBuilder.Entity("PlanningBook.Themes.Infrastructure.Entities.SubscriptionPlan", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SubscriptionPlans", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("371cffea-2b1e-4c4d-aec8-cffd1ae43fef"),
                            Description = "Basic",
                            Name = "Basic",
                            Price = 150m,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("b677c4c6-669b-43ca-9897-83b5cb1c0cd9"),
                            Description = "Elite",
                            Name = "Elite",
                            Price = 294m,
                            Type = 0
                        },
                        new
                        {
                            Id = new Guid("1fc13c2a-27e8-45cb-95dd-9dfd924db840"),
                            Description = "Lifetime",
                            Name = "Lifetime",
                            Price = 710m,
                            Type = 0
                        });
                });

            modelBuilder.Entity("PlanningBook.Themes.Infrastructure.Entities.Theme", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Themes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("835bc37f-8891-48da-9f01-4bfcbf50ab13"),
                            Description = "Black",
                            Name = "Black",
                            Price = 150m
                        },
                        new
                        {
                            Id = new Guid("27784869-292e-47e8-be5f-311d7a4aaf14"),
                            Description = "White",
                            Name = "White",
                            Price = 250m
                        },
                        new
                        {
                            Id = new Guid("eea6122c-c5d8-40f1-a44a-766008241255"),
                            Description = "Rain",
                            Name = "Rain",
                            Price = 400m
                        });
                });

            modelBuilder.Entity("PlanningBook.Themes.Infrastructure.Entities.UserPaymentMethod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StripePaymentMethodId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserPaymentMethods", (string)null);
                });

            modelBuilder.Entity("PlanningBook.Themes.Infrastructure.Entities.OrderDetail", b =>
                {
                    b.HasOne("PlanningBook.Themes.Infrastructure.Entities.Price", "Price")
                        .WithMany("OrderDetails")
                        .HasForeignKey("PriceId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Price");
                });

            modelBuilder.Entity("PlanningBook.Themes.Infrastructure.Entities.Price", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
