// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlanningBook.Themes.Infrastructure;

#nullable disable

namespace PlanningBook.Themes.Infrastructure.Migrations
{
    [DbContext(typeof(PBThemeDbContext))]
    partial class PBThemeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlanningBook.Themes.Infrastructure.Entities.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("ActualyTotalAmout")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Invoices", (string)null);
                });

            modelBuilder.Entity("PlanningBook.Themes.Infrastructure.Entities.InvoiceDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InvoiceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("InvoiceDetails", (string)null);
                });

            modelBuilder.Entity("PlanningBook.Themes.Infrastructure.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductType")
                        .HasColumnType("int");

                    b.Property<string>("StripeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StripePriceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("1fc13c2a-27e8-45cb-95dd-9dfd924db840"),
                            Name = "Lifetime Plan",
                            Price = 710m,
                            ProductType = 1,
                            StripeId = "prod_RGHOXdDumkw4WR",
                            StripePriceId = "price_1QNkpFDkmueHRg9S4XBlzXWg"
                        },
                        new
                        {
                            Id = new Guid("b677c4c6-669b-43ca-9897-83b5cb1c0cd9"),
                            Name = "Elite Plan",
                            Price = 294m,
                            ProductType = 1,
                            StripeId = "prod_RGHNxfzXdhiDTx",
                            StripePriceId = "price_1QNkobDkmueHRg9SOjsRIR9U"
                        },
                        new
                        {
                            Id = new Guid("371cffea-2b1e-4c4d-aec8-cffd1ae43fef"),
                            Name = "Basic Plan",
                            Price = 150m,
                            ProductType = 1,
                            StripeId = "prod_RGHLOw7fxZK5kZ",
                            StripePriceId = "price_1QNkmkDkmueHRg9S9kzCsJK0"
                        },
                        new
                        {
                            Id = new Guid("835bc37f-8891-48da-9f01-4bfcbf50ab13"),
                            Name = "Theme One",
                            Price = 150m,
                            ProductType = 0,
                            StripeId = "prod_RICKs6KQp8yTZN",
                            StripePriceId = "price_1QPbvhDkmueHRg9SYxUpGaE4"
                        },
                        new
                        {
                            Id = new Guid("27784869-292e-47e8-be5f-311d7a4aaf14"),
                            Name = "Theme Two",
                            Price = 250m,
                            ProductType = 0,
                            StripeId = "prod_RICKg7t3XaDv6z",
                            StripePriceId = "price_1QPbw8DkmueHRg9SEP1p1iMK"
                        },
                        new
                        {
                            Id = new Guid("eea6122c-c5d8-40f1-a44a-766008241255"),
                            Name = "Theme Three",
                            Price = 400m,
                            ProductType = 0,
                            StripeId = "prod_RICLOCfsBhGqge",
                            StripePriceId = "price_1QPbwlDkmueHRg9Smb83pb2L"
                        });
                });

            modelBuilder.Entity("PlanningBook.Themes.Infrastructure.Entities.StripeCustomer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StripeCustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StripePaymentMethodId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("StripeCustomers", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
